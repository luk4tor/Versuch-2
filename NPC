1. NPC-Klasse erstellen

public class NPC_OldMan extends Entity {

    public NPC_OldMan(GamePanel gp) {
        super(gp);
        direction = "down";
        speed = 1;
        // Optional: solidArea individuell setzen
        // solidArea = new Rectangle(0, 0, 48, 48);
        getImage();
    }

    public void getImage() {
        // Beispiel: Sprite-Images laden
        up1 = setup("/npc/oldman_up_1");
        up2 = setup("/npc/oldman_up_2");
        down1 = setup("/npc/oldman_down_1");
        down2 = setup("/npc/oldman_down_2");
        left1 = setup("/npc/oldman_left_1");
        left2 = setup("/npc/oldman_left_2");
        right1 = setup("/npc/oldman_right_1");
        right2 = setup("/npc/oldman_right_2");
    }

    @Override
    public void setAction() {
        actionLockCounter++;
        if (actionLockCounter == 120) {
            Random random = new Random();
            int i = random.nextInt(100) + 1; // 1-100

            if (i <= 25) {
                direction = "up";
            } else if (i <= 50) {
                direction = "down";
            } else if (i <= 75) {
                direction = "left";
            } else {
                direction = "right";
            }
            actionLockCounter = 0;
        }
    }
}



2. NPC-Array im GamePanel

public Entity[] npc = new Entity[10];

public void setNPC() {
    npc[0] = new NPC_OldMan(this);
    npc[0].worldX = tileSize * 21;
    npc[0].worldY = tileSize * 21;
}



3. NPC zeichnen
In der paintComponent-Methode:

for (int i = 0; i < npc.length; i++) {
    if (npc[i] != null) {
        npc[i].draw(g2, this);
    }
}



4. Entity: draw-Methode (in Entity-Klasse)

public void draw(Graphics2D g2, GamePanel gp) {
    BufferedImage image = null;
    int screenX = worldX - gp.player.worldX + gp.player.screenX;
    int screenY = worldY - gp.player.worldY + gp.player.screenY;

    switch (direction) {
        case "up":
            image = (spriteNum == 1) ? up1 : up2;
            break;
        case "down":
            image = (spriteNum == 1) ? down1 : down2;
            break;
        case "left":
            image = (spriteNum == 1) ? left1 : left2;
            break;
        case "right":
            image = (spriteNum == 1) ? right1 : right2;
            break;
    }
    g2.drawImage(image, screenX, screenY, gp.tileSize, gp.tileSize, null);
}



5. NPC-Update in GamePanel

for (int i = 0; i < npc.length; i++) {
    if (npc[i] != null) {
        npc[i].update();
    }
}



6. Kollisionserkennung: NPC zu Spieler und umgekehrt
Im CollisionChecker:

public int checkEntity(Entity entity, Entity[] target) {
    int index = 999;
    // ... Kollisionserkennung ähnlich wie für Objekte ...
    return index;
}

public void checkPlayer(Entity entity) {
    // ... Kollision mit Spieler prüfen ...
}



7. Action Lock Counter (in Entity-Klasse)

public int actionLockCounter = 0;
